FROM --platform=linux/amd64 ubuntu:20.04

ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

# GitHub Codespaces uses /workspaces/mlflow as a working directory
WORKDIR /workspaces/mlflow

RUN apt-get update -y
RUN apt-get install -y sudo
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC \
    sudo -E apt-get install --no-install-recommends -y \
    git curl wget jq vim tree zsh openjdk-11-jdk \
    # Dependencies for pyenv
    libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
    libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev

# Powerlevel10k
RUN git clone --depth 1 --branch v1.16.1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
COPY .devcontainer/.zshrc /root
COPY .devcontainer/.p10k.zsh /root

# Install miniconda
RUN sudo wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
RUN bash Miniforge3-Linux-x86_64.sh -b -p /root/miniconda
RUN rm Miniforge3-Linux-x86_64.sh
ENV PATH="/root/miniconda/bin:$PATH"

# Install pyenv
RUN git clone --depth 1 \
    # Fetch the latest release of pyenv
    --branch $(git ls-remote --tags https://github.com/pyenv/pyenv.git | grep -o -E 'v[1-9]+(\.[1-9]+)+$' | tail -1) \
    https://github.com/pyenv/pyenv.git /root/.pyenv
ENV PYENV_ROOT="/root/.pyenv"
ENV PATH="$PYENV_ROOT/bin:$PATH"

# Install node and yarn
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
RUN sudo apt-get install -y nodejs
RUN npm -g install yarn

# Setup a python development environment
ARG DEV_ENVIRONMENT_NAME="mlflow-dev-env"
RUN conda create -y -n mlflow-dev-env python=3.7
RUN conda clean --all --yes
RUN conda init zsh
RUN echo "conda activate ${DEV_ENVIRONMENT_NAME}" >> ~/.zshrc

# Install mlflow
RUN mkdir -p mlflow
COPY setup.py .
COPY mlflow/__init__.py ./mlflow
COPY mlflow/version.py ./mlflow
COPY README.rst .
COPY requirements ./requirements
RUN conda run -n ${DEV_ENVIRONMENT_NAME} pip install -e '.[extras,pipelines]'

# Install python dev dependencies
RUN conda run -n ${DEV_ENVIRONMENT_NAME} pip install \
    -r ./requirements/lint-requirements.txt \
    -r ./requirements/doc-requirements.txt \
    -r ./requirements/test-requirements.txt

# Install js dependencies
COPY mlflow/server/js ./mlflow/server/js
RUN cd mlflow/server/js && yarn install --silent
